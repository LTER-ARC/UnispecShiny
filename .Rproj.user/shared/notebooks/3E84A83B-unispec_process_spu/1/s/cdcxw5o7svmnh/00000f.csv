"0",""
"0","#------ "
"0","# Get integration times of ref data for each site"
"0","ref_int_values <- raw_data %>%"
"0","  filter((spu_filename %in% ref_files)) %>%"
"0","  select(Date,Site,Integration) %>%"
"0","  distinct()"
"0","# Join reference scan integration time to the nearest data scan integration time"
"0","raw_data_with_ref_int <- inner_join(raw_data, ref_int_values, by = c(""Date"",""Site""),suffix = c("".data"","".ref"")) %>%"
"0","  group_by(Date,Site,FileNum) %>%"
"0","  mutate(Integration.ref = Integration.ref[which.min(abs(Integration.data-Integration.ref))]) %>%"
"0","  distinct(FileNum, .keep_all = TRUE)"
"0",""
"0","## Join DATA with REFS"
"0",""
"0","raw_data_with_refs <- raw_data_with_ref_int %>% "
"0","  "
"0","  # unlist Spectra and remove edge wavelengths, because instrument unreliable at extreme wavelengths"
"0","  unnest(Spectra) %>% "
"0","  filter(Wavelength > 400, Wavelength < 1000) %>%"
"0","  # "
"0","  # # assign the ""REF_Integration"" value closest to data scan integration time"
"0","   rowwise() %>%"
"0","   group_by(Date, Site, Integration.ref) %>%"
"0","  # mutate(REF_Integration = ref_int_values$Integration[sapply(Integration, function(x)      #which.min(abs(ref_int_values$Integration - x)))]) %>%"
"0","  # #mutate(REF_Integration = assign_closest_ref(Integration, ref_int_values)) %>% "
"0","  #ungroup() %>% "
"0","  # join data with ref data"
"0","  left_join(.,correction_factors %>% rename(Integration.ref = Integration), "
"0","            by = c(""Date"", ""Site"", ""Wavelength"", ""Integration.ref"")) %>%"
"0","  #select(-Integration.ref) %>%  # drop joining column, no longer needed"
"0","  ungroup() %>% "
"0","  # calculate reflectances"
"0","  mutate(raw_reflectance = ChB/ChA) %>% # the raw reflectance"
"0","  mutate(corrected_reflectance = raw_reflectance*correction_factor) # corrected reflectance"
"0","X<- raw_data_with_refs %>% filter(is.na(correction_factor)) %>% filter( !Treatment==""IGNOR"")"
"0",""
"0","## Corrected Reflectances with one row per file"
"0","processed_data <- raw_data_with_refs %>% "
"0","  nest(processed_spectra = c(Wavelength, ChB, ChA, correction_factor, raw_reflectance, corrected_reflectance))"
